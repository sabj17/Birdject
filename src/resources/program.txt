#include <dht.h>

dht DHT;

#define pin1 1
#define pin2 2
#define pin3 3
#define pin4 4
#define pin5 5
#define pin6 6
#define pin7 7
#define pin8 8
#define pin9 9
#define pin10 10
#define pin11 11
#define pin12 12
#define pin13 13
#define pinA0 A0
#define pinA1 A1
#define pinA2 A2
#define pinA3 A3
#define pinA4 A4
#define pinA5 A5

// Not implemented
class List{
  public:


};

class Output {
  public:
    int pin;
    int state = 0;

    Output(int inputPin) {
      pin = inputPin;
    }
    void initialize() {
      pinMode(pin, OUTPUT);
    }


    void setMode(bool newMode) {
      state = newMode;
      digitalWrite(pin, newMode);
    }

    int isTurnedOn(){
      return state;
    }

    int changeMode() {
      if (state) {
        state = 0;
      } else {
        state = 1;
      }
      digitalWrite(pin, state);
      delay(200);
      return state;
    }
};

class Light : public Output {
  public:
    Light (int inputPin): Output(inputPin) {}
};

class Window : public Output {
  public:
    Window (int inputPin): Output(inputPin) {}

    int open_to(int degree){
        if(state != degree){
            state = degree;
        }
        return state;
    }

    int close(){
        if(state > 0){
            state = 0;
        }
        return state;
    }
};

class Radiator : public Output {
  public:
    Radiator (int inputPin): Output(inputPin) {}

    void setMode(int newMode) {
      if (0 <= newMode && newMode <= 5){
        state = newMode;
        digitalWrite(pin, newMode);
      }
    }


    int increase(){
      if(state < 5){
        state++;
      }
      return state;
    }

    int decrease(){
      if(state > 0){
        state--;
      }
      return state;
    }

};



class Input {
  public:
    int pin;

    Input (int inputPin) {
      pin = inputPin;
    }

    void initialize() {
      pinMode(pin, INPUT);
    }

    int isTurnedOn() {
      return digitalRead(pin);
    }
};


class Switch : public Input {
  public:
    Switch (int inputPin): Input(inputPin) {}
};

class Thermometer : public Input {
  public:
    Thermometer (int inputPin): Input(inputPin) {}

    float isTurnedOn() {
      return analogRead(pin);
    }

    float getTemp(){
        DHT.read11(pin);
        return DHT.temperature;
    }
};



// ///////////////// Generated Code Below ///////////////// //


class LivingRoomClass {
  public:
Light light1;
Switch switch1;


class SubClassClass {
  public:
Light light1;

SubClassClass() : light1(pin9) {}

} SubClass;

void turn_on_lights (){
light1.setMode(true);
SubClass.light1.setMode(true);
}

LivingRoomClass() : light1(pin8) , switch1(pin2) {}

} LivingRoom;



class KitchenClass {
  public:
Light light2;
Switch switch2;

KitchenClass() : light2(pin9) , switch2(pin3) {}

} Kitchen;

void initializeObjects(){
LivingRoom.light1.initialize();
LivingRoom.switch1.initialize();
LivingRoom.SubClass.light1.initialize();
Kitchen.light2.initialize();
Kitchen.switch2.initialize();
}

void setup() {
Serial.begin(9600);
initializeObjects();
}

void loop() {

if (LivingRoom.switch1.isTurnedOn()){
LivingRoom.turn_on_lights();
}

if (Kitchen.switch2.isTurnedOn() == true){
bool x = Kitchen.light2.changeMode();
if (x == true) {
Serial.println(String("Kitchen Light is on"));
}
else {
Serial.println(String("Kitchen Light is off"));
}
x = false;
}
}
